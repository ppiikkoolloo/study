import java.util.Arrays;
import java.util.Comparator;
Arrays.sort(arr, new Comparator<int[]>() {
    @Override
    public int compare(int[] o1, int[] o2) {
        if (o1[0] == o2[0]) {
            return o1[1] - o2[1];
        } else {
            return o1[0] - o2[0];
        }
    }
});



Arrays.sort(arr, new Comparator<int[]>() {   ///  Arrays.sort()를 이용하여 배열 arr을 정렬하는데, 정렬 기준으로 Comparator를 사용하도록 설정합니다.
                                                int[] 배열을 비교할 수 있는 Comparator 인스턴스를 생성하여 인자로 전달합니다.
                                                익명 클래스를 사용하여 Comparator 인터페이스를 구현합니다.
                                                
    @Override
    public int compare(int[] o1, int[] o2) {  ///   Comparator 인터페이스의 compare() 메서드를 오버라이드합니다.
                                                o1과 o2 매개변수는 비교할 두 개의 int[] 배열입니다.
                                                compare() 메서드는 두 매개변수를 비교하여 결과값을 반환합니다. 
                                                반환값이 음수면 o1이 o2보다 작다는 의미이고, 0이면 같다는 의미이며, 
                                                양수면 o1이 o2보다 크다는 의미입니다.
    
        if (o1[0] == o2[0]) {
            return o1[1] - o2[1];
        } else {
            return o1[0] - o2[0];      compare() 메서드에서 두 int[] 배열을 비교합니다.
                                        먼저 o1과 o2의 첫 번째 인덱스 값을 비교합니다.
                                        첫 번째 인덱스 값이 같으면, 두번째 인덱스 값을 비교하여 결과를 반환합니다.
                                        첫 번째 인덱스 값이 다르면, 첫 번째 인덱스 값을 비교하여 결과를 반환합니다.
        }
        
    }
});



